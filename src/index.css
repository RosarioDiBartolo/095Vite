@tailwind base;
@tailwind components;
@tailwind utilities;
 
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}
*::-webkit-scrollbar{
  display: none;
}
 
html{ 
  overscroll-behavior:none;  

  -webkit-overflow-scrolling: touch; /*   Smooth scrolling for iOS */
 }
html, body, #root {
     margin: 0;
    padding: 0;  
   }
  #root{
    overflow: visible; 
  } 

body{
  
  background: #27272a  ;
}
 
.animate-once{
  animation-iteration-count: initial;

}
 
 

@media screen and (display-mode: standalone) {
  
  header{
    height: 88px;
  } 


  main{ 
  }
  

  
} 
 
@keyframes animate-tap {
  from {
    max-width:  0px;
    max-height: 0px;
   }
  to {
    max-width: auto;
    max-height: auto;
  }
}
button.tap:active{
  background-color: aqua;
  animation: animate-tap 1s ease-in-out infinite;
}
:root {
  --foreground-rgb: 0, 0, 0;
  --background-start-rgb: 214, 219, 220;
  --background-end-rgb: 255, 255, 255;
}

@media (prefers-color-scheme: dark) {
  :root {
    --foreground-rgb: 255, 255, 255;
    --background-start-rgb: 0, 0, 0;
    --background-end-rgb: 0, 0, 0;
  }
}
 
 
@layer utilities {
  .text-balance {
    text-wrap: balance;
  }
}
  
input::-webkit-input-placeholder { /* Chrome, Safari, Edge */
  color: #ccc;
}

input::-moz-placeholder { /* Firefox */
  color: #ccc;
}
input{
  color: #ccc;
}
input:focus-visible{
  outline: none;
 }
 
 .shake{
   animation: tilt-shaking  0.5s ease-in-out;
 }
 
 @keyframes tilt-shaking {
  0% { transform: rotate(0deg); scale: 1.4; color:maroon; }
  25% { transform: rotate(10deg); }
  50% { transform: rotate(0eg); }
  75% { transform: rotate(-10deg); }
  100% { transform: rotate(0deg);   ;
}
} 

.backdrop-blur-md {
  backdrop-filter: blur(12px);
  -webkit-backdrop-filter: blur(12px); /* Safari support */
} .infiniteScrollWrapper {
  overflow-x: hidden;
  width: fit-content;
}

.infiniteScroll {
  animation: infiniteTranslate 10s linear infinite;
  white-space: nowrap; /* Ensure content doesn't wrap */
}

@keyframes infiniteTranslate {
  0% {
    transform: translateX(-100%);
  }
  100% {
    transform: translateX(100%);
  }
}